//
// EPITECH PROJECT, 2024
// Glados
// File description:
// EK Standard library - std
//

import bool
import builtins

fn (f) $ _ precedence 0 = f

fn _ + _ precedence 6 = builtin add
fn _ - _ precedence 6 = builtin sub
fn _ * _ precedence 7 = builtin mul
fn _ / _ precedence 7 = builtin div

fn (a) % (b) precedence 7 = a - (a / b) * b

fn not (a) = (a == false)

fn _ == _ precedence 4 = builtin eq
fn (a) != (b) precedence 4 = not (a == b)
fn _ < _ precedence 4 = builtin lt
fn (a) > (b) precedence 4 = b < a
fn (a) <= (b) precedence 4 = not (a > b)
fn (a) >= (b) precedence 4 = not (a < b)

fn (a) && (lazy b) precedence 3 = if a then b else false
fn (a) || (lazy b) precedence 2 = if a then true else b

fn if (cond) then (lazy truebr) else (lazy falsebr) precedence 1
   = builtin if $ cond $ (\v = truebr) $ (\v = falsebr)

fn (a) >> (b) precedence 1 = b

fn print _ = builtin print
fn eprint _ = builtin eprint

fn readLine = builtin readLine

fn exit _ = builtin exit

fn panic (str) = eprint str >> exit 1

fn assert (cond) message (str) = if cond then void else panic str

fn clamp (val) min (min) max (max) = if val < min then min else if val > max then max else val

fn (a) min (b) precedence 4 = if a < b then a else b
fn (a) max (b) precedence 4 = if a > b then a else b

fn _ ++ _ precedence 5r = builtin concat
fn _ toString = builtin toString
fn _ toInt = builtin toInt
fn _ toFloat = builtin toFloat
fn _ toChar = builtin toChar
fn _ toCodePoint = builtin toCodePoint

fn len _ = builtin length

fn _ at _ = builtin charAt

fn (f) . (g) = \x = (f $ (g $ x))

// Loop utilities

/// Loop action forever
fn loop (lazy action) = action >> loop action

/// Repeat function `f`, called with values from `a` to `b` (inclusive)
fn repeat (f) from (a) to (b)
    = if a > b then
        void
      else
        (f $ a) >> repeat f from (a + 1) to (b)
